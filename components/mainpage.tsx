/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/r5hEnCP9fRe
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/
"use client"

import { JSX, SVGProps, useState } from "react"

export default function MainPage() {
  const [isDarkMode, setIsDarkMode] = useState(false);
  const [activeIndex, setActiveIndex] = useState<number | null>(null);; // Track the active card

  const projects = [
    {
      title: "Project 1",
      link: "https://example.com/project1",
      description: "Detailed description of Project 1.",
    },
    {
      title: "Project 2",
      link: "https://example.com/project2",
      description: "Detailed description of Project 2.",
    },
    {
      title: "Project 3",
      link: "https://example.com/project3",
      description: "Detailed description of Project 3.",
    },
  ];

  const handleCardClick = (index: number, e: React.MouseEvent<HTMLDivElement>) => {
    e.stopPropagation(); // Prevent the event from bubbling up to the overlay
    setActiveIndex(index);
  };

  const handleClose = () => {
    setActiveIndex(null);
  };

  return (
    <div className={`relative flex flex-col min-h-screen ${isDarkMode ? "bg-[#0a1f0a] text-white" : "bg-[#f0f8f0] text-black"} font-mono`}>
      {activeIndex !== null && (
        <div className="absolute inset-0 bg-black bg-opacity-50 z-40" onClick={handleClose}>
          {projects.map((project, index) => (
            index === activeIndex && (
              <div key={index} className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-4/5 max-w-4xl bg-white p-8 rounded-lg shadow-lg z-50"
                style={{ backgroundColor: isDarkMode ? '#2a482a' : '#ffffff', color: isDarkMode ? '#ffffff' : '#000000' }}>
                <h3 className="text-2xl font-bold">{project.title}</h3>
                <p>{project.description}</p>
                <a href={project.link} target="_blank" rel="noopener noreferrer" className="mt-4 inline-block bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600">
                  View Project
                </a>
              </div>
            )
          ))}
        </div>
      )}
      <header className={`flex justify-between items-center p-6 ${activeIndex !== null ? "blur" : ""}`}>
        <div className="text-lg font-bold">{'>'}_ MV</div>
        <button
          onClick={() => setIsDarkMode(!isDarkMode)}
          className={`p-2 rounded-full transition-colors ${
            isDarkMode ? "bg-[#4d7a4d] text-white hover:bg-[#6b9d6b]" : "bg-[#d2e8d2] text-black hover:bg-[#c0dfc0]"
          }`}
        >
          <SunMoonIcon className="h-6 w-6" />
        </button>
      </header>
      <main className={`flex-grow overflow-auto px-6 md:px-12 lg:px-24 ${activeIndex !== null ? "blur" : ""}`}>
        <div className="flex flex-col items-center mt-4">
          <h1 className="text-4xl font-bold">Mihir Vador</h1>
          <p className="text-xl mt-2">Software Engineer. Temp.</p>
          <div className="flex space-x-4 mt-4">
             <GitlabIcon className="h-6 w-6" />
             <MailIcon className="h-6 w-6" />
             <LinkedinIcon className="h-6 w-6" />
             <FileIcon className="h-6 w-6" />
           </div>
           {/* Company Section */}
           <div className="mt-8 space-y-8">
             <div className="flex items-center space-x-4">
               <img src="/placeholder.svg" alt="Microsoft Logo" className="h-12 w-12" />
               <div>
                 <h2 className="text-xl font-bold">COMPANY - TEAM</h2>
                 <p>ROLE</p>
               </div>
             </div>
             <div className="flex items-center space-x-4">
               <img src="/placeholder.svg" alt="Bose Logo" className="h-12 w-12" />
               <div>
                 <h2 className="text-xl font-bold">COMPANY - TEAM</h2>
                 <p>ROLE</p>
               </div>
             </div>
             <div className="flex items-center space-x-4">
               <img src="/placeholder.svg" alt="Siemens Logo" className="h-12 w-12" />
               <div>
                 <h2 className="text-xl font-bold">COMPANY - TEAM</h2>
                 <p>ROLE</p>
               </div>
             </div>
           </div>
          <div className="w-full mt-10">
            <h2 className="text-3xl font-bold text-center">Projects</h2>
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mt-4">
              {projects.map((project, index) => (
                <div key={index} onClick={(e) => handleCardClick(index, e)} className={`relative p-4 rounded-lg shadow 
                    ${isDarkMode ? "bg-[#2a482a] text-white" : "bg-white text-black"} overflow-hidden cursor-pointer z-10`}>
                  <h3 className="text-xl font-bold">{project.title}</h3>
                </div>
              ))}
            </div>
          </div>
        </div>
      </main>
      <footer className={`w-full p-6 ${activeIndex !== null ? "blur" : ""} ${isDarkMode ? "bg-[#152a15] text-white" : "bg-[#d2e8d2] text-black"}`}>
        <div className="flex items-center space-x-4">
          <img src="/placeholder.svg" alt="Album Art" className="h-12 w-12" />
          <div>
            <p className="text-sm">Give in to Me - Lika Morgan</p>
            <p className={`text-xs ${isDarkMode ? "text-white" : "text-black"}`}>made by Mihir Vador</p>
          </div>
        </div>
      </footer>
    </div>
  );
}


function FileIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z" />
      <path d="M14 2v4a2 2 0 0 0 2 2h4" />
    </svg>
  )
}


function GitlabIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m22 13.29-3.33-10a.42.42 0 0 0-.14-.18.38.38 0 0 0-.22-.11.39.39 0 0 0-.23.07.42.42 0 0 0-.14.18l-2.26 6.67H8.32L6.1 3.26a.42.42 0 0 0-.1-.18.38.38 0 0 0-.26-.08.39.39 0 0 0-.23.07.42.42 0 0 0-.14.18L2 13.29a.74.74 0 0 0 .27.83L12 21l9.69-6.88a.71.71 0 0 0 .31-.83Z" />
    </svg>
  )
}


function LinkedinIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z" />
      <rect width="4" height="12" x="2" y="9" />
      <circle cx="4" cy="4" r="2" />
    </svg>
  )
}


function MailIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect width="20" height="16" x="2" y="4" rx="2" />
      <path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7" />
    </svg>
  )
}


function MoonIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z" />
    </svg>
  )
}


function SunMoonIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12 8a2.83 2.83 0 0 0 4 4 4 4 0 1 1-4-4" />
      <path d="M12 2v2" />
      <path d="M12 20v2" />
      <path d="m4.9 4.9 1.4 1.4" />
      <path d="m17.7 17.7 1.4 1.4" />
      <path d="M2 12h2" />
      <path d="M20 12h2" />
      <path d="m6.3 17.7-1.4 1.4" />
      <path d="m19.1 4.9-1.4 1.4" />
    </svg>
  )
}
